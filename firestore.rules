
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper function to get user's role from custom claims
    function getRole(userId) {
      return get(/databases/$(database)/documents/users/$(userId)).data.role;
    }
    
    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    function isAdmin() {
      return request.auth.token.admin == true;
    }

    // Workers:
    // - Any authenticated user can list/read workers.
    // - Only admin can create/update/delete.
    match /workers/{workerId} {
      allow read: if request.auth != null;
      allow write: if isAdmin();
    }

    // Attendance Logs:
    // - Worker can create their own log.
    // - Worker can only read their own logs.
    // - Admin can read all logs.
    match /attendance-logs/{logId} {
      allow create: if request.auth.uid == request.resource.data.workerId;
      allow read: if isOwner(resource.data.workerId) || isAdmin();
      allow update, delete: if isAdmin();
    }

    // Tasks:
    // - Worker can only read tasks assigned to them.
    // - Admin can create, update, delete all tasks.
    match /tasks/{taskId} {
       allow read: if isOwner(resource.data.workerId) || isAdmin();
       allow write: if isAdmin();
    }
    
    // Settings:
    // - Only admins can read/write organization settings
    match /settings/organization {
        allow read, write: if isAdmin();
    }
    
    // User roles: 
    // - Only used for auth claims, should not be client-accessible for list/query.
    // - User can read their own role.
    match /users/{userId} {
      allow get: if isOwner(userId) || isAdmin();
      allow list, write: if isAdmin();
    }
  }
}
